      PROGRAM CLUS
C
C    RECOGNIZE CLUSTRS IN SPACE-TIME IN AN EARTHQUAKE CATALOG
C
C
C     WRITTEN BY PAUL A. REASENBERG, U.S. GEOLOGICAL SURBVEY
C                                    345 MIDDLEFIELD ROAD
C                                   MENLO PARK, CA. 94301
C
C    DESCRIPTION OF THE PRINCIPLES EMPLOYTED IN THIS PROGRAM,
C    AND OF THE RESULTS IN AN APPLICATION OF THIS PROGRAM
C    TO DATA FFOROM CENTRAL CALIFORNIA MAY BE FOUND IN
C         "SECOND -ORDER MOMENT OF CENTRAL CALIFORNIA SEISMICITY"
C             BY PAUL A. REASENBERG,
C             JOURNAL OF GEOPHYSICAL RESEARCH, VOL 90, P. 5479-5495.
C
C
C    PROBLEMS, QUESTIONS, COMMENTS AND THE LIKE SHOULD BE ADDRESSED
C    TO PAUL REASENBERG.  GOOD LOUCK!
C
C    ADAPTED FOR 2KY BY: 
C            ALBERT LLOBET LORENZO, Dept. ASTRONOMIA I METEOROLOGIA
C				    UNIVERSITAT DE BARCELONA
C            JULY 2001, GEOPHYSIK FACULTY, KIEL UNIVERSITY
C
C    THE MAIN CHANGE IS THAT IN THIS VERSION THE TIME IS TRANSFORMED
C    TO JULIAN DAYS IN THE BEGINING OF THE PROGRAM SO WE NEED TO CALCULATE 
C    IT JUST ONCE FOR EACH EVENT  AND ALSO WE CAN AVOID EXTRA CALCULATIONS 
C    DUE TO LEAP YEARS. THE SUBROUTINE TDIF IN THE ORIGINAL PROGRAM IS 
C    ELIMINATED AND INSTEAD I USE JULIANY.
C    THERE ARE ALSO OTHER CHANGES RELATED TO THE FORMATS OF THE CATALOGS,
C    IN THIS VERSION THE FORMAT OF THE INPUT CATALOGUE IS THE FOLLOWING:
C    FORMAT(i4,5i2,f3.1,2a1,f7.3,f8.3,f5.1,a1)
C    THAT CORRESPONDS TO:
C                         I4 --> YEAR 
C                        5I2 --> MONTH/DAY/HOUR/MINUTE/SEC
C                       F3.1 --> MAGNITUDE
C                        2A1 --> TYPE OF EVENT/MAGNITUDE TYPE. 
C                                IT FOLLOWS THE SCECDC FORMAT CODE.
C                       F7.3 --> LATITUDE IN DEGREES
C                       F8.3 --> LONGITUDE IN DEGREES
C                       F5.1 --> DEPTH IN KM
C                         A1 --> QUALITY OF THE LOCATION
C                                IT FOLLOWS THE SCECDC FORMAT CODE.
C    IN THE PROGRAM SECONDS ARE NOT USED AS THEY WEREN'T IN THE ORIGINAL
C    PROGRAM. TO INTRODUCE THEM ONE JUST NEEDS TO ADD ONE POSITION TO THE
C    VECTOR ITIME AND ADD THE TERM  +SEC/3600. IN THE JULIANY SUBROUTINE.
C    IT'S EASY TO ADDAPT THE PROGRAM TO OTHER FORMATS AS THE ORIGINAL 
C    REASENBERG ONE. HOWEVER YOU SHOULD VE CAREFUL WHEN USING TWO DIGITS YEAR
C    FORMATS, THE SUBROUTINE JULIANY HAS SOME LINES COMMENTED THAT ADD 1900 
C    OR 2000 TO THE VALUE OF THE YEAR (UNDER 20 ADDS 2000, OTHERWISE 1900).
C    ANOTHER MINOR CHANGE IS THAT THE PROGRAM ASKS YOU FOR THE NAME OF THE
C    OUTPUT FILES (THE PROGRAM ITSELF ADDS THE EXTENSIONS: .OUT,.DEC,.CLU).
C    
C
C     DESCRIPTION OF VARIABLES:
C
C          LIST     POINTER FROM EVENT TO CLUSTR NUMBER
C          NC       NUMBER OF EVENTS IN CLUSTR
C          NCLUST   NUMBER OF CLUSTRS
C          N        INDEX FOR NEW CLUSTR NUMBER
C          CTIM0    TIME OF FIRST EVENT IN CLUSTR
C          CTIM1    TIME OF LARGEST EVENT IN CUSTER
C          CTIM2    TIME OF SECOND LARGEST EVENT IN CLUSTR
C NEW      JTIME0   JULIAN TIME OF FIRST EVENT IN CLUSTR
C NEW      JTIME1   JULIAN TIME OF LARGEST EVENT IN CLUSTR
C NEW      JTIME2   JULIAN TIME OF SECOND LARGEST EVENT IN CLUSTR         
C          CLAT,CLON,CDEP   POSITION OF 'EQUIVALENT EVENT' CORRESPONDING
C                   TO CLUSTR
C          CMAG1    MAGNITUDE OF LARGEST EVENT IN CLUSTR
C          CMAG2    MAGNITUDE OF SECOND LARGEST EVENT IN CLUSTR
C          CDUR     DURATION (FIRST EVENT TO LAST) OF CLUSTR
C          CMOMENT  SUMMED MOMENT OF EVENTS IN CLUSTR
C
C          TAU      LOOK-AHEAD TIME (MINUTES) FOR BUILDING CLUSTR.
C          TAUMIN   VALUE FOR TAU WHEN EVENT1 IS NOT CLUSTRED
C          RTEST    LOOK-AROUND (RADIAL) DISTANCE (KM) FOR BUILDING CLUSTR
C          R1       CIRCULAR CRACK RADIUS FOR EVENT1
C          RMAIN    CIRCULAR CRACK RADIUS FOR LARGEST EVENT IN CURRENT CLUSTR
C
C          XMEFF    "EFFECTIVE" LOWER MAGNITUDE CUTOFF FOR CATALOG.
C                   XMEFF IS RAISED ABOVE ITS BASE VALUE
C                   BY THE FACTOR XK*CMAG1(LIST(I)) DURING CLUSTRS.
C          RFACT    NUMBER OF CRACK RADII (SEE KANAMORI AND ANDERSON,
C                   1975) SURROUNDING EACH EARTHQUAKE WITHIN WHICH TO
C                   CONSIDER LINKING A NEW EVENT INTO CLUSTR.
C
C
C      INPUT/OUTPUT UNITS:
C          UNIT 1       SCRATCH FILE ON SCR:
C          UNIT 2       OUTPUT - CLUSTR SUMMARY
C          UNIT 3       INPUT - EARTHQUAKE CATALOG TO READ
C          UNIT 7       OUTPUT - CLUSTRED CATALOG
C          UNIT 8       OUTPUT - DECLUSTRED CATALOG
C
      DIMENSION CLAT(19000),CLON(19000),CDEP(19000)
Cmax------------
      DIMENSION CMAG1(0:19000),CMAG2(0:19000),CDUR(19000),CMOMENT(19000)
      INTEGER CTIM0(5,19000),CTIM1(5,19000),CTIM2(5,19000)
      DOUBLE PRECISION JTIME1(19000),JTIME2(19000),JTIME0(19000)
      INTEGER LIST(0:500000),NC(19000),FORE,ITT,LOR
      INTEGER ITIME(5),JTIME(5),LTIME(5),YTIM1(5),YTIM2(5)
Cmax-------
      SAVE ITIME,JTIME,LTIME,YTIM1,YTIM2
      CHARACTER*1 Q1,Q2,ICHR
      CHARACTER*18 BUF,BLANK18
      DOUBLE PRECISION DIF,mag,depth,JULIAN,IJULIAN,JJULIAN
      DOUBLE PRECISION LJTIME,YJTIME1,IJTIME2,la,lo,ma
      CHARACTER*40 CATALOG,CARD2,OUTFILE

Cmax-------------
      CHARACTER*15 CARD
      LOGICAL CLUSTR
      COMMON/A/ RFACT,TAU
Cmax----------
CMYRON      DATA LIST,CMAG1/50000*0,9000*0./
      SAVE LIST,CMAG1
Cmax---------
      DATA TAUMIN, TAUMAX, P1, XK /1440., 14400., 0.95, .5/
      DATA XMEFF,RFACT /1.5, 10.0/
      DATA BLANK18 /'                  '/
Cmax----------
C
      
   20 WRITE (6,1)
    1 FORMAT (' ENTER CATALOG FILENAME: ')
C      READ (5,'(a)') CATALOG
	CATALOG = 'data'
      WRITE(6,*)'ENTER OUTPUT FILES NAME'
C      READ(5,'(a)')OUTFILE 
      OUTFILE = 'outf'
      CALL LONGITUD(OUTFILE,LOR) 
    2 FORMAT (I4,4i2,2x,f3.1,2x,a15,f5.1,1x)
    3 FORMAT (f12.0,2I2,I4,2I2,a15,I3,I3)
Cmax----------------------
C     new code to read in the parameters from file para.dat
      open(10,file='para.dat')
 	read(10,*) TAUMIN, TAUMAX, P1, XK, XMEFF,RFACT, ERH1, ERZ1 
	OPEN (3,FILE=CATALOG,ERR=20)
C     TRANSFER CATALOG TO A SCRATCH DIRECT-ACCESS FILE
      OPEN (1,FILE='dacces.dat',STATUS='UNKNOWN',
     1      ACCESS='DIRECT',RECL=45,FORM='FORMATTED')
      IREC=0
   21 IREC=IREC+1
      READ(3,2,END=25)ITIME(1),ITIME(2),ITIME(3),ITIME(4),ITIME(5),
     1mag,card,depth
      IDEP1=INT(depth*10.)
      MAG1=INT(mag*100.)
      CALL JULIANY(ITIME,JULIAN)
      WRITE (1,3,REC=IREC)JULIAN,ITIME(3),ITIME(2),ITIME(1),
     1ITIME(4),ITIME(5),card,IDEP1,MAG1
      GOTO 21
C
   25 NEQ = IREC - 1
      REWIND (3)
      CLOSE (UNIT=1,STATUS='KEEP')
   29 FORMAT (A/' RFACT = ',F5.2,'  XMEFF = ',F5.2,'  P1 = ',F4.2,
     1        '  TAUMIN = ',F5.2,'  TAUMAX = ',F5.2)
      WRITE (6,29) CATALOG,RFACT,XMEFF,P1,TAUMIN/1440.,TAUMAX/1440.
C
      I=0
      N=0
      NCLUST=0

      OPEN (1,FILE='dacces.dat',STATUS='OLD',
     1      ACCESS='DIRECT',RECL=45,FORM='FORMATTED')
      OPEN (2, FILE=OUTFILE(1:LOR)//'.out', STATUS='UNKNOWN')
      OPEN (7,FILE=OUTFILE(1:LOR)//'.clu',STATUS='UNKNOWN')
Cmax 1      CARRIAGECONTROL='LIST')
      OPEN (8,FILE=OUTFILE(1:LOR)//'.dec',STATUS='UNKNOWN')
Cmax1      CARRIAGECONTROL='LIST')
C
C--- PROCESS ONE EVENT AT A TIME
C
C     GET THE ITH EVENT
  100 I=I+1
  
C DUE TO SOME COMPILATION PROBLEMS WITH THE READ INSTRUCTION:
C clus.f:124: 
C         READ (1,10,REC=I,END=500) ITIME(3),ITIME(2),ITIME(1),
C                    1     2
C Conflicting I/O control specifications at (1) and (2)
C I'VE CHANGED THE OLD INSTRUCTION BY A CONDITIONAL FOR THE NUMBER OF
C LINES IN THE CATALOGUE, NEQ.
      IF(I.GT.NEQ)GOTO 500

Cmax------------------------
      READ (1,10,REC=I)IJULIAN,ITIME(3),ITIME(2),ITIME(1),
     1ITIME(4),ITIME(5),
     2   XXLAT1,XXLON1,IDEP1,MAG1
C      WRITE(6,10)ITIME(3),ITIME(2),ITIME(1),
C     1ITIME(4),ITIME(5),
C     2   XXLAT1,XXLON1,IDEP1,MAG1
 

     
   10 FORMAT (f12.0,2I2,I4,2I2,F7.3,F8.3,I3,I3)
C  999 FORMAT (5I2,3X,I2,F7.3,1X,I5,F7.3,1X,F5.2,1x,F5.2)

      LAT1=INT(XXLAT1)
      LON1=INT(XXLON1)
      XLON1=(XXLON1-LON1)*60.
      XLAT1=(XXLAT1-LAT1)*60.
      XMAG1=MAG1/100.
      DEP1=IDEP1/10.
C      ERH1=1.
C      ERZ1=2.
      Q1='B'
Cmax---------------------------------------

      IF (MOD(I,200) .NE. 0) GOTO 115

C AS THE INFORMATION GIVEN BY IDATE IS NOT USED BY THE PROGRAM THE ERROR
C HAS NOT BEEN SOLVED, I'VE JUST COMMENTED THE LINE. 
C clus.f:380: 
C         CALL IDATE(BUF(1:9))
C              ^
C Reference to intrinsic `IDATE' at (^) invalid -- one or more arguments have
C incorrect type

C      CALL IDATE(BUF(1:9))
      CALL TIME(BUF(11:18))
      WRITE (6,110) BUF(11:18),(ITIME(NNN),NNN=1,3),I,NCLUST
  110 FORMAT (2X,A,2X,i4,2I2,I7,' EVENTS PROCESSED;',I6,'
     1CLUSTRS FOUND')
      BUF = BLANK18
C
C---- CALCULATE TAU (DAYS), THE LOOK-AHEAD TIME FOR EVENT 1.
C     WHEN EVENT1 BELONGS TO A CLUSTR, TAU IS A FUNCTION OF
C     THE MAGNITUDE OF AND THE TIME SINCE THE LARGEST EVENT IN THE
C     CLUSTR.  WHEN EVENT1 IS NOT (YET) CLUSTERED, TAU = TAUMIN
C
C  SET LOOK-AHEAD TIME (IN MINUTES) IF EVENT1 IS NOT YET CLUSTRED
  115 IF (LIST(I) .NE. 0) GOTO 32
   30 TAU = TAUMIN
      GOTO 40
C
C  CALCULATE LOOK-AHEAD TIME FOR EVENTS BELONGING TO A CLUSTR
C  32 DO 33 IT=1,5
C  33 JTIME(IT) = CTIM1(IT,LIST(I))
C     CALL TDIF(JTIME,ITIME,DIF)
   32 T=IJULIAN-JTIME1(LIST(I))

      IF (T .LE. 0.) GOTO 30
      DELTAM = (1.-XK)*CMAG1(LIST(I)) - XMEFF
      DENOM = 10.**((DELTAM-1.)*2./3.)
      TOP = -ALOG(1.-P1)*T
      TAU = TOP/DENOM
C  TRUNCATE TAU TO NOT EXCEED TAUMAX
      IF (TAU .GT. TAUMAX) TAU = TAUMAX
   40 CONTINUE
C
C     KEEP GETTING JTH EVENTS UNTIL DIF > TAU
      J=I
  200 J=J+1
  
C DUE TO SOME COMPILATION PROBLEMS WITH THE READ INSTRUCTION:
C clus.f:124: 
C         READ (1,10,REC=I,END=500) JTIME(3),JTIME(2),JTIME(1),
C                    1     2
C Conflicting I/O control specifications at (1) and (2)
C I'VE CHANGED THE OLD INSTRUCTION BY A CONDITIONAL FOR THE NUMBER OF
C LINES IN THE CATALOGUE, NEQ.
C AS CAN ALSO BE SEEN I'VE CHANGED THE LABEL WHERE TO GO IN CASE THAT WE'VE
C ALREADY SEARCHED FOR ALL THE CATALOGUE, INSTEAD OF FINISHING THE PROGRAM WE 
C GO FOR THE NEXT EVENT. IF NOT WE'LL DO EVERYTHING JUST WITH ONE EVENT.
      IF(J.GT.NEQ)GOTO 100

C--   SKIP THE JTH EVENT IF IT IS ALREADY IDENTIFIED AS BEING PART OF
C     THE CLUSTR ASSOCIATED WITH THE ITH EVENT
      IF (LIST(J) .EQ. LIST(I) .AND. LIST(J) .NE. 0) GOTO 200
C
Cmax-------------
      READ (1,10,REC=J)JJULIAN,JTIME(3),JTIME(2),JTIME(1),
     1JTIME(4),JTIME(5),
     2   XXLAT2,XXLON2,IDEP2,MAG2
      
      LAT2=INT(XXLAT2)
      LON2=INT(XXLON2)
      XLON2=(XXLON2-LON2)*60.
      XLAT2=(XXLAT2-LAT2)*60.
      ERH2=ERH1
      ERZ2=ERZ1
      Q2='B'
      XMAG2=MAG2/100.
      DEP2=IDEP2/10.
Cmax---------------     
C
C--- TEST FOR TEMPORAL CLUSTRING
C      CALL TDIF (ITIME, JTIME, DIF)
      DIF=JJULIAN-IJULIAN
      IF (DIF .GT. TAU) GOTO 400
C
C--- TEST FOR SPATIAL CLUSTRING
      CALL CTEST(ITIME,LAT1,XLAT1,LON1,XLON1,DEP1,XMAG1,ERH1,ERZ1,
     1   Q1,JTIME,LAT2,XLAT2,LON2,XLON2,DEP2,XMAG2,ERH2,ERZ2,Q2,
     2           CMAG1(LIST(I)),CLUSTR)
C
      IF (CLUSTR .EQV. .FALSE.) GOTO 200
C
C---- clustr.decLARED
C     IF EVENT I AND EVENT J ARE BOTH ALREADY ASSOCIATED WITH
C     CLUSTRS, COMBINE THE CLUSTERS.
      IF (LIST(I) .NE. 0 .AND. LIST(J) .NE. 0) GOTO 375
C
C     IF EVENT I IS ALREADY ASSOCIATED WITH A CLUSTR, ADD EVENT J TO IT
      IF (LIST(I) .NE. 0) GOTO 300
C
C     IF EVENT J IS ALREADY ASSOCIATED WITH A CLUSTR, ADD EVENT I TO IT
      IF (LIST(J) .NE. 0) GOTO 280
C
C--- INITIALIZE NEW CLUSTR
      N=N+1
      NCLUST=NCLUST+1
      LIST(I)=N
Cmax-----------
      CLAT(N)=XXLAT1
      CLON(N)=XXLON1
Cmax-------------
      CDEP(N)=DEP1
      NC(N)=1
      CMAG1(N)=XMAG1
      CMAG2(N)=-2.
      CMOMENT(N)=10**(1.2*XMAG1)
      DO 250 IT=1,5
      CTIM1(IT,N)=ITIME(IT)
      CTIM2(IT,N)=0
  250 CTIM0(IT,N)=ITIME(IT)
      JTIME1(N)=IJULIAN
      JTIME2(N)=0.
      JTIME0(N)=IJULIAN
      GOTO 300
C
C--- PREPARE TO ADD ITH EVENT TO EXISTING CLUSTR
  280 L=I
      K=LIST(J)

Cmax-------------
      LAT=LAT1
      XLAT=XLAT1
      LON=LON1
      XLON=XLON1
      XMAG=XMAG1
      DEP=DEP1
      DO 285 IT=1,5
  285 LTIME(IT)=ITIME(IT)
      LJTIME=IJULIAN
      GOTO 320
C
C--- PREPARE TO ADD JTH EVENT TO EXISTING CLUSTR
  300 L=J
      K=LIST(I)
      LAT=LAT2
      XLAT=XLAT2
      LON=LON2
      XLON=XLON2
      DEP=DEP2
      XMAG=XMAG2
      DO 305 IT=1,5
  305 LTIME(IT)=JTIME(IT)
      LJTIME=JJULIAN
C
C---- ADD NEW EVENT TO CLUSTR
  320 NC(K)=NC(K)+1
      W1=(NC(K)-1.)/NC(K)
      W2=  1.0/NC(K)
      LIST(L)=K
C
C     UPDATE CLUSTR FOCAL PARAMETERS
Cmax-----------
      CLAT(K)=CLAT(K)*W1 + (LAT+XLAT/60.)*W2
      CLON(K)=CLON(K)*W1 + (LON+XLON/60.)*W2
Cmax------

      CDEP(K)=CDEP(K)*W1 + DEP*W2
C
C     UPDATE OTHER CLUSTR PARAMETERS
      CMOMENT(K)=CMOMENT(K) + 10**(1.2*XMAG)
      IF (XMAG .GT. CMAG1(K)) GOTO 350
      IF (XMAG .LE. CMAG2(K)) GOTO 200
C
C     CURRENT EVENT IS SECOND LARGEST EVENT IN CLUSTR K
      CMAG2(K)=XMAG
      DO 330 IT=1,5
  330 CTIM2(IT,K)=LTIME(IT)
      JTIME2(k)=LJTIME
      GOTO 200
C
C     CURRENT EVENT IS LARGEST IN CLUSTR K
  350 CMAG2(K)=CMAG1(K)
      CMAG1(K)=XMAG
      DO 355 IT=1,5
      CTIM2(IT,K)=CTIM1(IT,K)
  355 CTIM1(IT,K)=LTIME(IT)
      JTIME2(K)=JTIME1(K)
      JTIME1(K)=LJTIME
      GOTO 200
C
C---- COMBINE EXISTING CLUSTRS BY MERGING INTO EARLIER CLUSTER
C     AND KEEPING EARLIER CLUSTR'S IDENTITY
  375 K=LIST(I)
      L=LIST(J)
C
      IF (K. LT. L) GOTO 376
      K=LIST(J)
      L=LIST(I)
C     MERGE CLUSTR L INTO CLUSTER K
  376 W1=FLOAT(NC(K))/FLOAT((NC(K)+NC(L)))
      W2=FLOAT(NC(L))/FLOAT((NC(K)+NC(L)))
      CLAT(K)=CLAT(K)*W1 + CLAT(L)*W2
      CLON(K)=CLON(K)*W1 + CLON(L)*W2
      CDEP(K)=CDEP(K)*W1 + CDEP(L)*W2
      CMOMENT(K)=CMOMENT(K) + CMOMENT(L)
      DO 380 II=1,NEQ
  380 IF (LIST(II) .EQ. L) LIST(II)=K
      NC(K)=NC(K)+NC(L)
      NC(L)=0
      NCLUST=NCLUST-1
C
C     IDENTIFY LARGEST AND SECOND LARGEST MAGNITUDE EVENTS IN
C     MERGED CLUSTR
      IF (CMAG1(K) .GE. CMAG1(L)) THEN
            YMAG1=CMAG1(K)
            DO 382 IT=1,5
  382       YTIM1(IT)=CTIM1(IT,K)
            YJTIME1=JTIME1(K)
            IF (CMAG1(L) .GT. CMAG2(K)) THEN
                  YMAG2=CMAG1(L)
                  DO 383 IT=1,5
  383             YTIM2(IT)=CTIM1(IT,L)
                  YJTIME2=JTIME1(L)
            ELSE
                  YMAG2=CMAG2(K)
                  DO 384 IT=1,5
  384             YTIM2(IT)=CTIM2(IT,K)
                  YJTIME2=JTIME2(K)
            END IF
      ELSE
            YMAG1=CMAG1(L)
            DO 392 IT=1,5
  392       YTIM1(IT)=CTIM1(IT,L)
            YJTIME1=JTIME1(L)
            IF (CMAG1(K) .GE. CMAG2(L)) THEN
                  YMAG2=CMAG1(K)
                  DO 393 IT=1,5
  393             YTIM2(IT)=CTIM1(IT,K)
                  YJTIME2=JTIME1(K)
            ELSE
                  YMAG2=CMAG2(L)
                  DO 394 IT=1,5
  394             YTIM2(IT)=CTIM2(IT,L)
                  YJTIME2=JTIME1(L)
            END IF
      END IF
C
      CMAG1(K)=YMAG1
      CMAG2(K)=YMAG2
      DO 395 IT=1,5
      CTIM1(IT,K)=YTIM1(IT)
  395 CTIM2(IT,K)=YTIM2(IT)
      JTIME1(K)=YJTIME1
      JTIME2(K)=YJTIME2
C
C     UPDATE DURATION OF MERGED EVENT
C      DO 396 IT=1,5
C  396 JTIME(IT)=CTIM0(IT,K)
C      CALL TDIF(JTIME,ITIME,DIF)
      DIF=IJULIAN-JTIME0(K)
      CDUR(K)=DIF/1440.
C
      GOTO 200
C
C---- FINISH PROCESSING ITH EVENT
  400 IF (LIST(I) .EQ. 0) GOTO 100
C
C     UPDATE DURATION OF CLUSTR K FOR EVENT I
C      DO 360 IT=1,5
C  360 JTIME(IT)=CTIM0(IT,LIST(I))
C      CALL TDIF(JTIME,ITIME,DIF)
      DIF=IJULIAN-JTIME0(LIST(I))
      CDUR(LIST(I))=DIF/1440.
      GOTO 100
C
C---- ENTIRE CATALOG HAS BEEN SEARCHED
C     OUTPUT RESULTS
C
  500 NEQCL = 0
      DO 502 I=1,NEQ
  502 IF (LIST(I) .NE. 0) NEQCL=NEQCL+1
C
C      CALL IDATE(BUF(1:9))
      CALL TIME(BUF(11:18))
C
      DO 520 I=1,NEQ
      READ (3,'(a40)') CARD2
      WRITE (7,518) CARD2,LIST(I)
      IF (LIST(I) .EQ. 0) WRITE (8,518) CARD2,LIST(I)
  518 FORMAT (A40,3X,i5)
  520 CONTINUE
C
C-- WRITE THE OUTPUT FILE SUMMARIZING THE RUN AND THE LISTING THE CLUSTRS
      WRITE (2,503) CATALOG,NEQ,NCLUST,NEQCL,BUF,RFACT,XMEFF,P1,
     1              TAUMIN/1440., TAUMAX/1440.
  503 FORMAT (//'        SUMMARY OF CLUSTRS IN  ',A,//
     1 I10,' EARTHQUAKES TESTED;  ',I6,' CLUSTRS IDENTIFIED',5X,
     2 I6,' CLUSTRED EVENTS',5X,A/
     3 5X,'RFACT = ',F5.2,'   XMEFF = ',F5.2,'   P1 = ',F4.2,
     4    '   TAUMIN (DAYS) = ',F5.2,'   TAUMAX (DAYS) = ',F5.2//
     5     '    N  -1ST EVENT-   DUR(DAYS)   NC  -------EQUIVALENT',
     6     ' EVENT-------   --LARGEST EVENT--   2ND LARGEST EVENT',
     7        ' PCT(F) T2-T1 M1-M2'/)
      DO 515 K=1,N
      IF (NC(K) .EQ. 0) GOTO 515
      LAT=CLAT(K)
      XLAT=(CLAT(K)-LAT)*60.
      LON=CLON(K)
      XLON=(CLON(K)-LON)*60.
      XMAG=(ALOG10(CMOMENT(K)))/1.2
Cmax-----------
      IMAG=INT(XMAG*100.)
      IDEP=INT(CDEP(K)*10.)
      NLAT=INT((CLAT(K)-LAT)*100.)
      NLON=INT((CLON(K)-LON)*100.)
Cmax-----------
C
C---- CALCULATE PERCENTAGE OF CLUSTR DURATION TAKEN BY FORESHOCKS
C      DO 504 IT=1,5
C      ITIME(IT)=CTIM0(IT,K)
C  504 JTIME(IT)=CTIM1(IT,K)
C      CALL TDIF(ITIME,JTIME,DIF)
      DIF=JTIME1(K)-JTIME0(K)
      IF (CDUR(K) .LT. 0.001) CDUR(K)=.001
      FORE = (DIF/14.40)/CDUR(K)
C
C---- CALCULATE TIME (DAYS) FROM LARGEST EVENT TO 2ND-LARGEST EVENT.
C     (POSITIVE = AFTERSHOCK-LIKE,  NEGATIVE = FORESHOCK-LIKE).
      DO 505 IT=1,5
      ITIME(IT)=CTIM1(IT,K)
  505 JTIME(IT)=CTIM2(IT,K)
C      CALL TDIF(ITIME,JTIME,DIF)
      DIF=JTIME2(K)-JTIME1(K)
      T12DIF=DIF/1440.
      XMDIF=CMAG1(K)-CMAG2(K)
C
      ICHR = CHAR(MOD(K-1,26)+65)
Cmax------------------
  510 WRITE (2,511)K,(CTIM0(IT,K),IT=1,5),CDUR(K),NC(K),CLAT(K)
     1       ,CLON(K),CDEP(K),XMAG,(CTIM1(IT,K),IT=1,5),CMAG1(K),
     2       (CTIM2(IT,K),IT=1,5),CMAG2(K),FORE,T12DIF,XMDIF
  511 FORMAT (1X,I6,1X,i4,2I2,1X,2I2,2X,F8.3,3X,I6,F7.3,F8.3,2F6.2,
     1        2(3X,I4,4I2,1X,F6.2),2X,I3,1X,F8.3,F5.2)
Cmax-----------------
C
C     WRITE OUT THE "EQUIVALENT EVENTS" TO DECLUSTRED CATALOG

      IF(ITIME(1).LT.20)THEN
       ITT=2000+ITIME(1)
      ELSE
       ITT=1900+ITIME(1)
      ENDIF
      la=float(lat)+XLAT/100.
      lo=float(lon)+XLON/100.
	ma = float(IMAG)/100
	write(*,*) IMAG, ma
      WRITE(8,513)ITT,ITIME(2),ITIME(3),ITIME(4),ITIME(5),0,
     *ma,la,lo,float(IDEP/10),0
C      WRITE (8,513) ITIME(3),ITIME(2),ITIME(1),ITIME(4),ITIME(5),
C     1 LAT,NLAT,LON,NLON,IDEP,IMAG
 513  FORMAT(i4,5i2,f3.1,'Uu',f7.3,f8.3,f5.1,'U',3x,i5)
C  513 FORMAT (5I2.2,'000',I2.2,I3.3,'N',2I3.3,'W',I3.3,5X,I3.3)

Cmax  513 FORMAT (3I2,1X,2I2,1X,' 0.00',1X,F7.4,1X,F7.4,
Cmax     1        2X,F5.2,2X,F5.2,T85,A1)
  515 CONTINUE
Cmax-------------------
C
      CLOSE (UNIT=1,STATUS='KEEP')
      CLOSE (UNIT=2,STATUS='KEEP')
      CLOSE (UNIT=3,STATUS='KEEP')
Cmax      CLOSE (UNIT=4,STATUS='KEEP')
      STOP
      END
      SUBROUTINE CTEST (ITIME,LAT1,XLAT1,LON1,XLON1,DEP1,XMAG1,ERH1,
     1                  ERZ1,Q1,JTIME,LAT2,XLAT2,LON2,XLON2,DEP2,XMAG2,
     2                  ERH2,ERZ2,Q2,CMAG1,CLUSTR)
C
C      DETERMINE WHETHER EVENT1 AND EVENT2 ARE 'CLUSTRED'
C      ACCORDING TO THE RADIAL DISTANCE CRITERION:
C
C            REDUCED HYPOCENTRAL DISTANCE .LE. RTEST
C
      LOGICAL CLUSTR
      CHARACTER*1 Q1,Q2,QUAL1(4),QUAL2(4)
      DIMENSION ERHQUAL(4),ERZQUAL(4)
      INTEGER ITIME(5),JTIME(5)
      DOUBLE PRECISION DIF
      COMMON/A/ RFACT,TAU
      DATA ERHQUAL/0.75,1.50,3.00,5.00/
      DATA ERZQUAL/1.00,2.00,6.00,10.0/
      DATA QUAL1/'A','B','C','D'/
      DATA QUAL2/'A','B','C','D'/
C
      CLUSTR=.FALSE.
C-- THE INTERACTION DISTANCE ABOUT AN EVENT IS DEFINED AS
C
C         R  =  RFACT * A(M, DSIGMA)
C
C  WHERE A(M, DSIGMA) IS THE RADIUS OF A CIRCULAR CRACK
C  (KANAMORI AND ANDERSON, 1975) CORRESPONDING TO AN EARTHQUAKE OF
C  MAGNITUDE M AND STRESS DROP DSIGMA.  THE VALUE DSIGMA = 30 BARS
C  IS ADOPTED IMPLICITLY IN THE CALCULATION.
C
C     LOG A  =  0.4*M - (LOG(DSIGMA))/3 - 1.45
C
C  THE TERM (LOG(DSIGMA)/3 - 1.45) EVALUATES TO THE
C  FACTOR 0.011 IN CA+LCULATION BELOW, WHEN DSIGMA=30 BARS.
C  A IS IN KILOMETERS.
C
C---- CLIP HYPOCENTRAL ERRORS
      DO 10 I=1,4
   10 IF (Q1 .EQ. QUAL1(I) .OR. Q1 .EQ. QUAL2(I) ) GOTO 15
      I=4
   15 IF (ERH1 .EQ. 0. .OR. ERH1 .GT. ERHQUAL(I) ) ERH1=ERHQUAL(I)
      IF (ERZ1 .EQ. 0. .OR. ERZ1 .GT. ERZQUAL(I) ) ERZ1=ERZQUAL(I)
      DO 20 I=1,4
   20 IF (Q2 .EQ. QUAL1(I) .OR. Q2 .EQ. QUAL2(I) ) GOTO 25
      I=4
   25 IF (ERH2 .EQ. 0. .OR. ERH2 .GT. ERHQUAL(I) ) ERH2=ERHQUAL(I)
      IF (ERZ2 .EQ. 0. .OR. ERZ2 .GT. ERZQUAL(I) ) ERZ2=ERZQUAL(I)
C
C---- DETERMINE HYPOCENTRAL DISTANCE BETWEEN EVENTS
Cmax------------
      ALAT=LAT1+XLAT1/60.
      ALON=LON1+XLON1/60.
      BLAT=LAT2+XLAT2/60.
      BLON=LON2+XLON2/60.
Cmax----------------
      CALL DELAZ(ALAT,ALON,BLAT,BLON,R,AZR)
      Z=ABS(DEP1-DEP2)
      R=SQRT(Z**2 + R**2)
      IF (Z .LT. 0.01 .AND. R .LT. 0.01) GOTO 30
C
C     REDUCE HYPOCENTRAL DISTANCE BY LOCATION UNCERTAINTY OF BOTH EVENTS
C     NOTE THAT R CAN BE NEGATIVE WHEN LOCATION UNCERTAINTIES EXCEED
C     HYPOCENTRAL DISTANCE
      ALPHA = ATAN2(Z,R)
      CA = COS(ALPHA)
      SA = SIN(ALPHA)
      E1 = SQRT(ERH1*ERH1*CA*CA + ERZ1*ERZ1*SA*SA)
      E2 = SQRT(ERH2*ERH2*CA*CA + ERZ2*ERZ2*SA*SA)
      R  = R - E1 - E2
C
C
C     CALCULATE INTERACTION RADIUS THE FIRST EVENT OF THE PAIR
C     AND FOR THE LARGEST EVENT IN THE CLUSTR ASSOCIATED WITH
C     THE FIRST EVENT
   30 R1 = RFACT * 0.011 * 10.**(0.4*XMAG1)
      RMAIN =      0.011 * 10.**(0.4*CMAG1)
      RTEST = R1 + RMAIN
C     LIMIT INTERACTION DISTANCE TO ONE CRUSTAL THICKNESS
      IF (RTEST .GT. 30.) RTEST=30.
C
C---- TEST DISTANCE CRITERION
      IF (R .LE. RTEST) CLUSTR=.TRUE.
C
      RETURN
      END
C *******************************************************************
C THIS IS THE SUBROUTINE ELIMINATED TO AVOID THE 2YK PROBLEM AND ALSO
C TO IMPROVE THE PERFORMANCE OF THE ALGORITH.

C      SUBROUTINE TDIF (ITIME,JTIME,DIF)
C
C      CALCULATES THE TIME DIFFERENCE (JTIME - ITIME)
C      WHERE THE ELEMENTS OF ITIME OF JTIME REPRESENT YEAR,
C      MONTH, DAY, HOUR AND MINUTE.  LEAP YEARS ARE ACCOUNTED FOR.
C      THE TIME DIFFERENCE, IN MINUTES, IS RETURNED IN THE
C      DOUBLE PRECISION VARIABLE DIF.
C
C      DIF = (JTIME - ITIME)
C
C      DIMENSION DAYS(12),ITIME(5),JTIME(5)
C      INTEGER DAYS,ITIME,JTIME,ITIME1,JTIME1
C      DOUBLE PRECISION T1,T2,T1A,T2A,T1B,T2B,DIF
C      DATA DAYS/0,31,59,90,120,151,181,212,243,273,304,334/

C Solves the 2Ky problem in a simple way.
      
C      IF(ITIME(1).LT.20)THEN
C       ITIME1=ITIME(1)+2000
C      ELSE
C       ITIME1=ITIME(1)+1900
C      ENDIF
C      IF(JTIME(1).LT.20)THEN
C       JTIME1=JTIME(1)+2000
C      ELSE
C       JTIME1=JTIME(1)+1900
C      ENDIF

C---- T1A IS NUMBER OF MINUTES FROM 00:00 1/1/ITIME(1) TO ITIME
C      T1A = ( (DAYS(ITIME(2)) + ITIME(3))*24. + ITIME(4))*60. + ITIME(5)
C      IF (MOD(ITIME(1),4).EQ.0 .AND. ITIME(2).GT.2) T1A = T1A + 1440.
C
C---- T1B IS NUMBER OF DAYS FROM 00:00 1/1/69 TO 00:00 1/1/ITIME(1)
C      T1B = (ITIME1-1969)*365 + INT((ITIME1-1969)/4.)
C
C      T1 = T1A + T1B *1440.
C
C---- T2A IS NUMBER OF MINUTES FROM 00:00 1/1/JTIME(1) TO JTIME
C      T2A = ( (DAYS(JTIME(2)) + JTIME(3))*24. + JTIME(4))*60. + JTIME(5)
C      IF (MOD(JTIME(1),4).EQ.0 .AND. JTIME(2).GT.2) T2A = T2A + 1440.
C
C---- T2B IS NUMBER OF DAYS FROM 00:00 1/1/69 TO 00:00 1/1/JTIME(1)
C      T2B = (JTIME1-1969)*365 + INT((JTIME1-1969.)/4.)
C
C      T2 = T2A + T2B *1440.
C
C      DIF = T2 - T1
C      RETURN
C      END
C *********************************************************************
      SUBROUTINE JULIANY(TIME,JULIA)

C THIS IS THE NEW SUBROUTINE THAT GIVES EACH EVENT ITS TIME IN MINUTES.
      
      INTEGER TIME(5),JDAY,TIME1,dd(12)
      REAL*8 JULIA,hora
      
      dd(1)=0
      dd(2)=31
      dd(3)=59
      dd(4)=90
      dd(5)=120
      dd(6)=151
      dd(7)=181
      dd(8)=212
      dd(9)=243
      dd(10)=273
      dd(11)=304
      dd(12)=334
      
C FIRST OF ALL I MUST CONVERT THE YEAR TO A FOUR DIGITS VALUE.
       
      TIME1=TIME(1)

C      IF(TIME(1).LT.20)THEN
C       TIME1=TIME(1)+2000
C      ELSE
C       TIME1=TIME(1)+1900
C      ENDIF

      hora=TIME(4)+TIME(5)/60.
      
      dj=33281.5+365*(TIME1-1950)+dd(TIME(2))+TIME(3)+hora/24.+
     *INT((TIME1-1948)/4.)
     
      IF(TIME1/4..EQ.INT(TIME1/4.))THEN
       IF(TIME(2).LE.2)THEN
        dj=dj-1.
       ENDIF
      ENDIF
      
      JULIA=dj*1440.
      
      RETURN
      END     

C *********************************************************************
       SUBROUTINE DELAZ(ALAT,ALON,BLAT,BLON,DIST,AZR)
C
C        DOUBLE PRECISION VERSION
C
C        COMPUTES CARTESIAN DISTANCE FROM A TO B
C        A AND B ARE IN DECIMAL DEGREES AND N-E COORDINATES
C        DEL -- DELTA IN DEGREES
C        DIST -- DISTANCE IN KM
C        AZ -- AZIMUTH FROM A TO B CLOCKWISE FROM NORTH IN DEGREES
C
      DOUBLE PRECISION PI2,RAD,FLAT,ALATR,ALONR,BLATR,BLONR,GEOA,
     1       TANA,TANB,ACOL,BCOL,DIFLON,COSDEL,DELR,TOP,DEN,GEOB,
     2       COLAT,RADIUS
C
      DATA PI2/1.570796E0/
      DATA RAD/1.745329E-02/
      DATA FLAT/.993231E0/
      IF (ALAT.EQ.BLAT.AND.ALON.EQ.BLON) GOTO 10
C-----CONVERT TO RADIANS
      ALATR=ALAT*RAD
      ALONR=ALON*RAD
      BLATR=BLAT*RAD
      BLONR=BLON*RAD
      TANA=FLAT*DTAN(ALATR)
      GEOA=DATAN(TANA)
      ACOL=PI2-GEOA
      TANB=FLAT*DTAN(BLATR)
      GEOB=DATAN(TANB)
      BCOL=PI2-GEOB
C-----CALCUATE DELTA
      DIFLON=BLONR-ALONR
      COSDEL=DSIN(ACOL)*DSIN(BCOL)*DCOS(DIFLON)+DCOS(ACOL)*DCOS(BCOL)
      DELR=DACOS(COSDEL)
C-----CALCUATE AZIMUTH FROM A TO B
      TOP=DSIN(DIFLON)
      DEN=DSIN(ACOL)/DTAN(BCOL)-DCOS(ACOL)*DCOS(DIFLON)
      AZR=DATAN2(TOP,DEN)
C-----COMPUTE DISTANCE IN KILOMETERS
      COLAT=PI2-(ALATR+BLATR)/2.
      RADIUS=6371.227*(1.0+3.37853D-3*(1./3.-((DCOS(COLAT))**2)))
      DIST=DELR*RADIUS
      RETURN
   10 DIST=0.0
      AZR=0.0
      RETURN
      END
C ************************************************************************
C SUBROUTINE LONGITUD. GIVES THE LENGHT OF A STRING UP TO THE FIRST SPACE.
	SUBROUTINE LONGITUD(paraula,lparaula)
	
	CHARACTER*(*) paraula
	CHARACTER*1 car
	
	i=0
	car='i'
	DOWHILE(car.NE.' ')
	   i=i+1
	   car=paraula(i:i)
	ENDDO
	lparaula=i-1
	RETURN
	END
