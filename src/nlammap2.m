function nlammap2() % autogenerated function wrapper
 % turned into function by Celso G Reyes 2017
 
ZG=ZmapGlobal.Data; % used by get_zmap_globals

% This is  the m file lammap2.m. It will display a map view of the
% seismicity in Lambert projection and ask for two input
% points select with the cursor. These input points are
% the endpoints of the crossection.
%
% Stefan Wiemer 2/95

report_this_filefun(mfilename('fullpath'));

xpos = get(gca,'pos');
set(gca,'pos',[0.15 0.3 0.8 0.4]);
figure_w_normalized_uicontrolunits(xsec_fig)

try

    if ~isempty(vo)
        [vox, voy] = lc_xsec2(vo.Latitude',vo.Longitude',vo.Longitude*0,wi,leng,lat1,lon1,lat2,lon2);
    end

    if ~isempty(ZG.maepi)
        [maex, maey] = lc_xsec2(ZG.maepi.Latitude',ZG.maepi.Longitude',ZG.maepi.Depth,wi,leng,lat1,lon1,lat2,lon2);
    end

    if ~isempty(well)
        i = find(well(:,1) == inf);wellx = []; welly = [];
        for k = 1:length(i)-1
            [wx, wy] = lc_xsec2(well(i(k):i(k+1),2)',well(i(k):i(k+1),1)',well(i(k):i(k+1),3),wi,leng,lat1,lon1,lat2,lon2);
            [m1,m2] = size(wy) ; if m1 > m2 ; wy = wy', end
            wellx = [wellx  inf  wx];
            welly = [welly  inf  wy];
        end
    end

    if ~isempty(main)
        [maix, maiy] = lc_xsec2(main(:,2)',main(:,1)',main(:,1)*0,wi,leng,lat1,lon1,lat2,lon2);
        maiy = -maiy;
    end


    if exist('maix', 'var')
        hold on
        pl = plot(maix,maiy,'*k');
        set(pl,'MarkerSize',12,'LineWidth',2)
    end

    if exist('maex', 'var')
        hold on
        pl = plot(maex,-maey,'hk');
        set(pl,'LineWidth',1.5,'MarkerSize',12,...
            'MarkerFaceColor','y','MarkerEdgeColor','k')

    end

    if exist('vox', 'var')
        hold on
        plovo = plot(vox,-voy,'^r')
        set(plovo,'LineWidth',1.5,'MarkerSize',6,...
            'MarkerFaceColor','w','MarkerEdgeColor','r');
    end

    if exist('wellx', 'var')
        hold on
        plwe = plot(wellx,-welly,'k')
        set(plwe,'LineWidth',2);
    end

catch
end

add_menu_divider();
options = uimenu('Label','Select');
uimenu(options,'Label','Select EQ inside Polygon ',...
    'callback',@callbackfun_001);
uimenu(options,'Label','Refresh ',...
     'callback',@callbackfun_002);

options = uimenu('Label','Ztools');


uimenu(options,'Label', 'differential b ',...
     'callback',@callbackfun_003);

uimenu(options,'Label','Fractal Dimension',...
     'callback',@callbackfun_004);

uimenu(options,'Label','Mean Depth',...
     'callback',@callbackfun_005);

uimenu(options,'Label','z-value grid',...
     'callback',@callbackfun_006);

uimenu(options,'Label','b and Mc grid ',...
     'callback',@callbackfun_007);

uimenu(options,'Label','Prob. forecast test',...
     'callback',@callbackfun_008);

uimenu(options,'Label','beCubed',...
     'callback',@callbackfun_009);

uimenu(options,'Label','b diff (bootstrap)',...
     'callback',@callbackfun_010);

uimenu(options,'Label','Stress Varianz',...
     'callback',@callbackfun_011);


uimenu(options,'Label','Time Plot ',...
     'callback',@callbackfun_012);

uimenu(options,'Label',' X + topo ',...
     'callback',@callbackfun_013);

uimenu(options,'Label','Vert. Exaggeration',...
     'callback',@callbackfun_014);

uimenu(options,'Label','Rate change grid',...
     'callback',@callbackfun_015);

uimenu(options,'Label','Omori parameter grid',...
     'callback',@callbackfun_016); % formerly pcross

figure_w_normalized_uicontrolunits(mapl)
uic2 = uicontrol('BackGroundColor',[0.9 0.9 0.9],'Units','normal',...
    'Position',[.8 .92 .20 .06],'String','Refresh ',...
     'callback',@callbackfun_017);
% create the selected catalog
%
newa  = ZG.a.subset(inde);
% Check size of catalog, then decide where to put the xsex values
[nY,nX] = size(a);
% if nX < 11
newa = [newa xsecx'];
%     disp('xsecx values stored in last column!');
% else
%     newa(:,11) = xsecx';
%     disp('xsecx values stored in column 11!');
% end
sel = 'in';


function callbackfun_001(mysrc,myevt)
  % automatically created callback function from text
  callback_tracker(mysrc,myevt,mfilename('fullpath'));
  h1 = gca;
  stri = 'Polygon';
   selectp;
end
 
function callbackfun_002(mysrc,myevt)
  % automatically created callback function from text
  callback_tracker(mysrc,myevt,mfilename('fullpath'));
  [xsecx xsecy,  inde] =mysect(tmp1,tmp2,ZG.a.Depth,wi,0,lat1,lon1,lat2,lon2);
end
 
function callbackfun_003(mysrc,myevt)
  % automatically created callback function from text
  callback_tracker(mysrc,myevt,mfilename('fullpath'));
  sel = 'in';
   h1=gca;
   bcrossVt2(sel);
end
 
function callbackfun_004(mysrc,myevt)
  % automatically created callback function from text
  callback_tracker(mysrc,myevt,mfilename('fullpath'));
  sel = 'in';
  Dcross(sel);
end
 
function callbackfun_005(mysrc,myevt)
  % automatically created callback function from text
  callback_tracker(mysrc,myevt,mfilename('fullpath'));
  meandepx;
end
 
function callbackfun_006(mysrc,myevt)
  % automatically created callback function from text
  callback_tracker(mysrc,myevt,mfilename('fullpath'));
  sel = 'in';
  magrcros(sel);
end
 
function callbackfun_007(mysrc,myevt)
  % automatically created callback function from text
  callback_tracker(mysrc,myevt,mfilename('fullpath'));
  sel = 'in';
  bcross(sel);
end
 
function callbackfun_008(mysrc,myevt)
  % automatically created callback function from text
  callback_tracker(mysrc,myevt,mfilename('fullpath'));
  rContainer.fXSWidth = wi;
   rContainer.Lon1 = lon1;
   rContainer.Lat1 = lat1;
   rContainer.Lon2 = lon2;
   rContainer.Lat2 = lat2;
  pt_start(newa, xsec_fig, 0, rContainer, name);
end
 
function callbackfun_009(mysrc,myevt)
  % automatically created callback function from text
  callback_tracker(mysrc,myevt,mfilename('fullpath'));
  rContainer.fXSWidth = wi;
   rContainer.Lon1 = lon1;
   rContainer.Lat1 = lat1;
   rContainer.Lon2 = lon2;
   rContainer.Lat2 = lat2;
  bc_start(newa, xsec_fig, 0, rContainer);
end
 
function callbackfun_010(mysrc,myevt)
  % automatically created callback function from text
  callback_tracker(mysrc,myevt,mfilename('fullpath'));
  rContainer.fXSWidth = wi;
   rContainer.Lon1 = lon1;
   rContainer.Lat1 = lat1;
   rContainer.Lon2 = lon2;
   rContainer.Lat2 = lat2;
  st_start(newa, xsec_fig, 0, rContainer);
end
 
function callbackfun_011(mysrc,myevt)
  % automatically created callback function from text
  callback_tracker(mysrc,myevt,mfilename('fullpath'));
  sel = 'in';
   cross_stress;
end
 
function callbackfun_012(mysrc,myevt)
  % automatically created callback function from text
  callback_tracker(mysrc,myevt,mfilename('fullpath'));
  timcplo;
end
 
function callbackfun_013(mysrc,myevt)
  % automatically created callback function from text
  callback_tracker(mysrc,myevt,mfilename('fullpath'));
   xsectopo;
end
 
function callbackfun_014(mysrc,myevt)
  % automatically created callback function from text
  callback_tracker(mysrc,myevt,mfilename('fullpath'));
  vexa;
end
 
function callbackfun_015(mysrc,myevt)
  % automatically created callback function from text
  callback_tracker(mysrc,myevt,mfilename('fullpath'));
  sel = 'in';
  rc_cross_a2(sel);
end
 
function callbackfun_016(mysrc,myevt)
  % automatically created callback function from text
  callback_tracker(mysrc,myevt,mfilename('fullpath'));
  sel = 'in';
  calc_Omoricross(sel);
end
 
function callbackfun_017(mysrc,myevt)
  % automatically created callback function from text
  callback_tracker(mysrc,myevt,mfilename('fullpath'));
  delete(uic2);
  delete(gca);
  delete(gca);
  delete(gca);
  nlammap2;
end
 
end
