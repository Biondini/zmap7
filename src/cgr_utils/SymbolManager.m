classdef SymbolManager
    % SYMBOLMANAGER allows you to control appearance of symbols on map
    properties(Constant)
        %fields = {'LineWidth','LineStyle','Color',...
        %    'Marker','MarkerSize','MarkerEdgeColor','MarkerFaceColor'};
         fields={'DisplayName';'Color';'LineStyle';'LineWidth';'Marker';'MarkerSize';'MarkerEdgeColor';'MarkerFaceColor'}
    end
    properties
        markerNames ={'+','o','*','.','x','square','diamond','^','v','<','>','pentagram','hexagram','none'};
        markerValues={'+','o','*','.','x','s',     'd',      '^','v','<','>','p',        'h',       'none'};
        
        lineValues = {'-','--',':','-.','none'};
        
        colors = {'yellow','magenta','cyan','red','lime','blue','white','black','<html><b>choose'};
        colors_rgb = {[1 1 0],[1 0 1],[0 1 1], [1 0 0], [0 1 0], [0 0 1], [1 1 1], [0 0 0]};
        
    end
    
    methods
        function obj = SymbolManager()
            
        end
        
        
        function C=fill_values(obj,h)
            
            
            switch h.Type
                case 'scatter'
                    [MECidx, MarkerEdgeColor] = Xcolor({'flat';'none'}, h.MarkerEdgeColor);
                    [MFCidx, MarkerFaceColor] = Xcolor({'auto','flat','none'}, h.MarkerFaceColor);
                    [Cidx, CColor] = Xcolor({}, h.CData(1,:));
                    
                    mIndex=find(strcmp(h.Marker,obj.markerNames));
                    
                    C = {... fieldname, fieldwidth, fieldtype,
                        'DisplayName',      120, {'Style','text','String',h.DisplayName};...
                        'CData',            130,  {'Style','PopupMenu','String',CColor,'Value',Cidx,...
                                              'Callback',{@setLineEdgeFaceColor,'CData'}};...
                        'LineStyle',        60, {'Style','text','String',''};...
                        'LineWidth',        50,  {'Style','edit','String',num2str(h.LineWidth),...
                                              'Callback',@(src,~)set(h,'LineWidth',str2double(src.String))};...
                        'Marker',           90,  {'Style','PopupMenu','String',obj.markerNames,'Value',find(strcmp(h.Marker,obj.markerNames)),...
                                              'Callback',@(src,~)set(h,'Marker',obj.markerNames{src.Value})};...
                        'SizeData',         50,  {'Style','edit','String',num2str(mean(h.SizeData)),...
                                              'Callback',@(src,~)set(h,'SizeData',str2double(src.String))};...
                        'MarkerEdgeColor',  130,  {'Style','PopupMenu','String',MarkerEdgeColor,'Value',MECidx,...
                                              'Callback',{@setLineEdgeFaceColor,'MarkerEdgeColor'}};...
                        'MarkerFaceColor',  130,  {'Style','PopupMenu','String',MarkerFaceColor,'Value',MFCidx,...
                                              'Callback',{@setLineEdgeFaceColor,'MarkerFaceColor'}};...
                        };
                    
                case 'line'
                    [MECidx, MarkerEdgeColor] = Xcolor({'auto';'none'}, h.MarkerEdgeColor);
                    [MFCidx, MarkerFaceColor] = Xcolor({'auto','none'}, h.MarkerFaceColor);
                    [Cidx, CColor] = Xcolor({}, h.Color(1,:));
                    
                    mIndex=find(strcmp(h.Marker,obj.markerNames));
                    assert(~isempty(mIndex),'marker issue %s not in markerNames',h.Marker);
                    
                    
                    C = {... fieldname, fieldwidth, fieldtype, inLine, inScatter, getfun, setfun
                        'DisplayName',  120, {'Style','text','String',h.DisplayName};...
                        'Color',        130,  {'Style','PopupMenu','String',CColor,'Value',Cidx,...
                                              'Callback',{@setLineEdgeFaceColor,'Color'}};...
                        'LineStyle',    60,  {'Style','PopupMenu','String',obj.lineValues,'Value',find(strcmp(h.LineStyle,obj.lineValues)),...
                                              'Callback',@(src,~)set(h,'LineStyle',obj.lineValues{src.Value})};...
                        'LineWidth',    50,  {'Style','edit','String',num2str(h.LineWidth),...
                                              'Callback',@(src,~)set(h,'LineWidth',str2double(src.String))};...
                        'Marker',       90,  {'Style','PopupMenu','String',obj.markerNames,'Value',mIndex,...
                                              'Callback',@(src,~)set(h,'Marker',obj.markerNames{src.Value})};...
                        'MarkerSize',   50,  {'Style','edit','String',num2str(h.MarkerSize),...
                                              'Callback',@(src,~)set(h,'MarkerSize',str2double(src.String))};...
                        'MarkerEdgeColor',130,  {'Style','PopupMenu','String',MarkerEdgeColor,'Value',MECidx,...
                                              'Callback',{@setLineEdgeFaceColor,'MarkerEdgeColor'}};...
                        'MarkerFaceColor',130,  {'Style','PopupMenu','String',MarkerFaceColor,'Value',MFCidx,...
                                              'Callback',{@setLineEdgeFaceColor,'MarkerFaceColor'}};...
                        };
                otherwise
                    C={};
            end
            for i=1:size(C,1)
                C{i,4} = @()h.(C{i,1}); % get function
                C{i,5} = @(val)set(h,C{i,1},val); % set function
            end
            %disp(C)
            
            function setLineEdgeFaceColor(src,~,fld)
                if ismember(src.String{src.Value},{'auto','none','flat'})
                    h.(fld)=src.String{src.Value};
                elseif src.Value==numel(src.String)
                    
                    newc=uisetcolor(h.(fld));
                    h.(fld)=newc;
                    % add this "new" color to the list
                    src.String(end+1)=src.String(end);
                    %src.String(end-1)={mat2str(newc,2)}; %
                    src.String(end-1)={alt_colorlist(newc)};
                else
                    nAdded = find(strcmp(src.String,obj.colors{1})) - 1; % zero if nothing added
                    idx=src.Value - nAdded;
                    if idx>numel(obj.colors_rgb)
                        [~,newc]=alt_colorlist(src.String{src.Value});
                    else
                        newc = obj.colors_rgb{idx};
                    end
                    h.(fld)= newc;
                end
            end
                
            function [idx, displist]=Xcolor(additionalOptions, existingValue)
                % find position in list. if it doesn't exist, add it. return index.
                
                % add field-unique options to top of list
                displist = [additionalOptions(:) ; obj.colors(:)];
                lookuplist = [additionalOptions(:) ; obj.colors_rgb(:)];
                
                % find existing value's position within the lookup list
                idx = find(cellfun(@(x)isequal(x,existingValue), lookuplist));
                
                % if our value isn't found, then add it to the top of the list, and set index to it.
                if isempty(idx) || idx==0
                    [nm,v] = alt_colorlist(existingValue);
                    displist(end+1)=displist(end);
                    displist(end-1)={nm};
                    idx=numel(displist)-1;
                end
            end
        end
        
        function test(obj, ax)
            
            % show the legend. has dual purpose. it assigns DisplayName and provides feedback for user
            wasVisible=strcmp(ax.Legend.Visible,'on');
            if ~wasVisible
                ax.Legend.Visible='on';
            end
            
            f=findobj('Tag','testfigure');
            
            ch=ax.Children;
            x=20; xspace=5;
            y = 20; h=20;
            fullht = y+10;
            
            
            ts = ax.Title.String;
            if isempty(ts)
                ts=ax.Tag;
            end
                
            if isempty(f)
                f=figure('Tag','testfigure','Name',sprintf('Adjust Symbols for %s',ts));
                f.Position(3)=760;
                f.Position(4)=numel(ch)*fullht+60;
                f.MenuBar='none';
            else
                set(f,'Name',sprintf('Adjust Symbols for %s',ts));
                clf
            end
            
            xoff=x;
            for itt=numel(ch): -1 : 1
                if ~strcmp(ch(itt).Type,'line') && ~strcmp(ch(itt).Type,'scatter')
                    continue
                end
                C=obj.fill_values(ch(itt));
                for i=1:size(C,1)
                    w=C{i,2};
                    misc_nv = C{i,3};
                    uicontrol(gcf,'Position',[xoff,y,w,20],misc_nv{:});
                    xoff = xoff + w + xspace;
                end
                
                y=y+30; % up to next row
                if itt==1 && f.Position(3) < xoff+5
                    f.Position(3)= xoff+5;
                end
                xoff=x;
            end
            
            % label the fields
            flds = {'DisplayName';'Color';'LineStyle';'LineWidth';'Marker';'MarkerSize';'MarkerEdgeColor';'MarkerFaceColor'};
            for n=1:numel(obj.fields)
                fn=obj.fields{n};
                w = C{n,2};
                uicontrol(f,'Style','text','String',fn,'HorizontalAlignment','center',...
                    'Position',[xoff, y, w, h]);
                xoff = xoff + w + xspace;
            end
            
            % hide it again.
            if ~wasVisible
                ax.Legend.Visible='off';
            end
        end
       
    end
    methods(Static)
        function cb(src,ev,ax)
            sm=SymbolManager;
            sm.test(ax);
        end
    end
end


function [name,val]=alt_colorlist(idx)
    % look up a color by its RGB value or name
    % values modified from https://www.rapidtables.com/web/color/RGB_Color.html
    a={ 'maroon',[0.50, 0.00, 0.00];...
        'dark red',[0.55, 0.00, 0.00];...
        'brown',[0.65, 0.16, 0.16];...
        'firebrick',[0.70, 0.13, 0.13];...
        'crimson',[0.86, 0.08, 0.24];...
        'red',[1.00, 0.00, 0.00];...
        'tomato',[1.00, 0.39, 0.28];...
        'coral',[1.00, 0.50, 0.31];...
        'indian red',[0.80, 0.36, 0.36];...
        'light coral',[0.94, 0.50, 0.50];...
        'dark salmon',[0.91, 0.59, 0.48];...
        'salmon',[0.98, 0.50, 0.45];...
        'light salmon',[1.00, 0.63, 0.48];...
        'orange red',[1.00, 0.27, 0.00];...
        'dark orange',[1.00, 0.55, 0.00];...
        'orange',[1.00, 0.65, 0.00];...
        'gold',[1.00, 0.84, 0.00];...
        'dark golden rod',[0.72, 0.53, 0.04];...
        'golden rod',[0.85, 0.65, 0.13];...
        'pale golden rod',[0.93, 0.91, 0.67];...
        'dark khaki',[0.74, 0.72, 0.42];...
        'khaki',[0.94, 0.90, 0.55];...
        'olive',[0.50, 0.50, 0.00];...
        'yellow',[1.00, 1.00, 0.00];...
        'yellow green',[0.60, 0.80, 0.20];...
        'dark olive green',[0.33, 0.42, 0.18];...
        'olive drab',[0.42, 0.56, 0.14];...
        'lawn green',[0.49, 0.99, 0.00];...
        'chart reuse',[0.50, 1.00, 0.00];...
        'green yellow',[0.68, 1.00, 0.18];...
        'dark green',[0.00, 0.39, 0.00];...
        'green',[0.00, 0.50, 0.00];...
        'forest green',[0.13, 0.55, 0.13];...
        'lime',[0.00, 1.00, 0.00];...
        'lime green',[0.20, 0.80, 0.20];...
        'light green',[0.56, 0.93, 0.56];...
        'pale green',[0.60, 0.98, 0.60];...
        'dark sea green',[0.56, 0.74, 0.56];...
        'medium spring green',[0.00, 0.98, 0.60];...
        'spring green',[0.00, 1.00, 0.50];...
        'sea green',[0.18, 0.55, 0.34];...
        'medium aqua marine',[0.40, 0.80, 0.67];...
        'medium sea green',[0.24, 0.70, 0.44];...
        'light sea green',[0.13, 0.70, 0.67];...
        'dark slate gray',[0.18, 0.31, 0.31];...
        'teal',[0.00, 0.50, 0.50];...
        'dark cyan',[0.00, 0.55, 0.55];...
        'cyan',[0.00, 1.00, 1.00];...
        'light cyan',[0.88, 1.00, 1.00];...
        'dark turquoise',[0.00, 0.81, 0.82];...
        'turquoise',[0.25, 0.88, 0.82];...
        'medium turquoise',[0.28, 0.82, 0.80];...
        'pale turquoise',[0.69, 0.93, 0.93];...
        'aqua marine',[0.50, 1.00, 0.83];...
        'powder blue',[0.69, 0.88, 0.90];...
        'cadet blue',[0.37, 0.62, 0.63];...
        'steel blue',[0.27, 0.51, 0.71];...
        'corn flower blue',[0.39, 0.58, 0.93];...
        'deep sky blue',[0.00, 0.75, 1.00];...
        'dodger blue',[0.12, 0.56, 1.00];...
        'light blue',[0.68, 0.85, 0.90];...
        'sky blue',[0.53, 0.81, 0.92];...
        'light sky blue',[0.53, 0.81, 0.98];...
        'midnight blue',[0.10, 0.10, 0.44];...
        'navy',[0.00, 0.00, 0.50];...
        'dark blue',[0.00, 0.00, 0.55];...
        'medium blue',[0.00, 0.00, 0.80];...
        'blue',[0.00, 0.00, 1.00];...
        'royal blue',[0.25, 0.41, 0.88];...
        'blue violet',[0.54, 0.17, 0.89];...
        'indigo',[0.29, 0.00, 0.51];...
        'dark slate blue',[0.28, 0.24, 0.55];...
        'slate blue',[0.42, 0.35, 0.80];...
        'medium slate blue',[0.48, 0.41, 0.93];...
        'medium purple',[0.58, 0.44, 0.86];...
        'dark magenta',[0.55, 0.00, 0.55];...
        'dark violet',[0.58, 0.00, 0.83];...
        'dark orchid',[0.60, 0.20, 0.80];...
        'medium orchid',[0.73, 0.33, 0.83];...
        'purple',[0.50, 0.00, 0.50];...
        'thistle',[0.85, 0.75, 0.85];...
        'plum',[0.87, 0.63, 0.87];...
        'violet',[0.93, 0.51, 0.93];...
        'magenta',[1.00, 0.00, 1.00];...
        'orchid',[0.85, 0.44, 0.84];...
        'medium violet red',[0.78, 0.08, 0.52];...
        'pale violet red',[0.86, 0.44, 0.58];...
        'deep pink',[1.00, 0.08, 0.58];...
        'hot pink',[1.00, 0.41, 0.71];...
        'light pink',[1.00, 0.71, 0.76];...
        'pink',[1.00, 0.75, 0.80];...
        'antique white',[0.98, 0.92, 0.84];...
        'beige',[0.96, 0.96, 0.86];...
        'bisque',[1.00, 0.89, 0.77];...
        'blanched almond',[1.00, 0.92, 0.80];...
        'wheat',[0.96, 0.87, 0.70];...
        'corn silk',[1.00, 0.97, 0.86];...
        'lemon chiffon',[1.00, 0.98, 0.80];...
        'light golden rod yellow',[0.98, 0.98, 0.82];...
        'light yellow',[1.00, 1.00, 0.88];...
        'saddle brown',[0.55, 0.27, 0.07];...
        'sienna',[0.63, 0.32, 0.18];...
        'chocolate',[0.82, 0.41, 0.12];...
        'peru',[0.80, 0.52, 0.25];...
        'sandy brown',[0.96, 0.64, 0.38];...
        'burly wood',[0.87, 0.72, 0.53];...
        'tan',[0.82, 0.71, 0.55];...
        'rosy brown',[0.74, 0.56, 0.56];...
        'moccasin',[1.00, 0.89, 0.71];...
        'navajo white',[1.00, 0.87, 0.68];...
        'peach puff',[1.00, 0.85, 0.73];...
        'misty rose',[1.00, 0.89, 0.88];...
        'lavender blush',[1.00, 0.94, 0.96];...
        'linen',[0.98, 0.94, 0.90];...
        'old lace',[0.99, 0.96, 0.90];...
        'papaya whip',[1.00, 0.94, 0.84];...
        'sea shell',[1.00, 0.96, 0.93];...
        'mint cream',[0.96, 1.00, 0.98];...
        'slate gray',[0.44, 0.50, 0.56];...
        'light slate gray',[0.47, 0.53, 0.60];...
        'light steel blue',[0.69, 0.77, 0.87];...
        'lavender',[0.90, 0.90, 0.98];...
        'floral white',[1.00, 0.98, 0.94];...
        'alice blue',[0.94, 0.97, 1.00];...
        'ghost white',[0.97, 0.97, 1.00];...
        'honeydew',[0.94, 1.00, 0.94];...
        'ivory',[1.00, 1.00, 0.94];...
        'azure',[0.94, 1.00, 1.00];...
        'snow',[1.00, 0.98, 0.98];...
        'black',[0.00, 0.00, 0.00];...
        'dim gray',[0.41, 0.41, 0.41];...
        'gray',[0.50, 0.50, 0.50];...
        'dark gray',[0.66, 0.66, 0.66];...
        'silver',[0.75, 0.75, 0.75];...
        'light gray',[0.83, 0.83, 0.83];...
        'gainsboro',[0.86, 0.86, 0.86];...
        'white smoke',[0.96, 0.96, 0.96];...
        'white',[1.00, 1.00, 1.00]...
        };
    if ischar(idx)
        idx=find(strcmp(idx,a(:,1)));
        if idx==0
            val=[nan nan nan];
            name='unknown';
        else
            val=a{idx,2};
            name=a{idx,1};
        end
    elseif isnumeric(idx) && numel(idx)==3
        % look up closest value
        vals=cell2mat(a(:,2));
        [~,idx]=min((vals(:,1)-idx(1)).^2 + (vals(:,2)-idx(2)).^2 + (vals(:,3)-idx(3)).^2);
        idx=idx(1);
        val=vals(idx,:);
        name=a{idx,1};
    elseif isnumeric(idx) && length(idx)==1
        % return this index
        name=a{idx,1};
        val=a{idx,2};
    else
        error('index doesn''t meet expectations');
    end
end