function startmen(parent_fig)
report_this_filefun(mfilename('fullpath'));
%
%  This file display the original menu
%
%  Stefan Wiemer 12/94

%  Create new figure
% Find out of figure already exists
%

global wex wey winx winy c1 c2 c3 my_dir

% [existFlag, mainmenu]=figure_exists('ZMAP 6.0 - Menu');
my_dir = ' ';

% Set up the Seismicity Map window Enviroment
%
if nargin==1
    disp(parent_fig)
    genmen = uimenu(parent_fig,'Label','Data');
    
    uimenu(genmen, ...
        'Label','Load *.mat datafile',...
        'Callback', {@think_and_do,'startzma'});
    uimenu(genmen, ...
        'Label','Import data from other formatted file',... %was Data ImportFilters
        'Callback', {@think_and_do,'zdataimport'});
    uimenu(genmen, ...
        'Label','FDSN web fetch',... %TODO
        'Callback', @get_fdsn_data_from_web);
    uimenu(genmen, ...
        'Label', 'Create or Modify *.mat datafile',...
        'Callback', {@think_and_do, 'setup'});
    uimenu(genmen, ...
        'Label', 'Current Dataset Info',...
        'Callback',{@think_and_do,'datinf'});
    
    uimenu(genmen, ...
        'Label','Set working directory ',...
        'Callback',{@think_and_do,'working_dir_in'});

    genmen = uimenu(parent_fig,'Label','Help');


    uimenu(genmen, ...
        'Label','Introduction and Help',...
        'Callback', @(s,e) showweb('new'));

    uimenu(genmen, ...
        'Label','Sample Slide Show',...
        'Callback',@(s,e) slshow());
    
end
%{
if ~existFlag
    mainmenu  = figure_w_normalized_uicontrolunits( ...
        'Name','ZMAP 6.0 - Menu',...
        'NumberTitle','off', ...
        'MenuBar','none', ...
        'NextPlot','new', ...
        'Color',[c1 c2 c3],...
        'Visible','off', ...
        'Position',[ wex, wey-300, winx-300, winy-150]);
    orient tall
    axis off

    uicontrol(mainmenu,...
        'Units','normalized',...
        'Callback','showweb(''new'');',...
        'String','Introduction and Help',...
        'BackgroundColor' ,[0.8 0.8 0.8]',...
        'Position',[0.10 0.90 0.80 0.09]);

    uicontrol(mainmenu,...
        'Units','normalized',...
        'Callback','think;startzma',...
        'String','Load *.mat  Datafile',...
        'BackgroundColor' ,[0.8 0.8 0.8]',...
        'Position',[0.10 0.80 0.80 0.09]);
    uicontrol(mainmenu,...
        'Units','normalized',...
        'Callback','think;zdataimport',...
        'String','Data Import Filters',...
        'BackgroundColor' ,[0.8 0.8 0.8]',...
        'Position',[0.10 0.70 0.80 0.09]);

    uicontrol(mainmenu,...
        'Units','normalized',...
        'Callback','think;setup',...
        'String','Create or Modify *.mat Datafile',...
        'BackgroundColor' ,[0.8 0.8 0.8]',...
        'Position',[0.10 0.60 0.80 0.09]);

    uicontrol(mainmenu,...
        'Units','normalized',...
        'Callback','think;datinf',...
        'String','Current Dataset Info ',...
        'BackgroundColor' ,[0.8 0.8 0.8]',...
        'Position',[0.10 0.50 0.80 0.09]);


    uicontrol(mainmenu,...
        'Units','normalized',...
        'Callback','think;dosl = ''newf'';slshow ',...
        'String','Sample Slide Show',...
        'BackgroundColor' ,[0.8 0.8 0.8]',...
        'Position',[0.10 0.40 0.80 0.09]);

    % TOFIX either find data or remove option
    uicontrol(mainmenu,...
        'Units','normalized',...
        'Callback','think;showweb(''data'');',...
        'String','Online Supplementary Datasets ',...
        'BackgroundColor' ,[0.8 0.8 0.8]',...
        'Position',[0.10 0.30 0.80 0.09]);

    uicontrol(mainmenu,...
        'Units','normalized',...
        'Callback','think;working_dir_in',...
        'String','Set working directory ',...
        'BackgroundColor' ,[0.8 0.8 0.8]',...
        'Position',[0.10 0.20 0.80 0.09]);

else   % if fig exist
    figure_w_normalized_uicontrolunits(mainmenu)
end
set(mainmenu,'visible','on')
%}
end

function think_and_do(s, e, f_handle, varargin)
    think;
    if ischar(f_handle) && nargin==3
        evalin('base',f_handle); %use evalin??
    else
        f_handle(varargin{:});
    end
end

function get_fdsn_data_from_web(s, e)
    think;
    h = findall(0,'Tag','fdsn_import_dialog');
    if isempty(h)
        fdsn_param_dialog(); % create
    else
        h.Visible = 'on'; % show existing
    end
end



    