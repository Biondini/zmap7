function plot_circbootfit_a2() % autogenerated function wrapper
% Script: plot_circbootfit_a2
% Selects earthquakes in the radius ra around a grid node
% Jochen Woessner
% last update: 17.07.03
 % turned into function by Celso G Reyes 2017
 
ZG=ZmapGlobal.Data; % used by get_zmap_globals

report_this_filefun(mfilename('fullpath'));
    wCat='newt2'; % working catalog name

try
    delete(plos1)
catch
    disp(' ');
end

titStr ='Selecting EQ in Circles                         ';
messtext= ...
    ['                                                '
    '  Please use the LEFT mouse button              '
    ' to select the center point.                    '
    ' The "ni" events nearest to this point          '
    ' will be selected and displayed in the map.     '];

zmap_message_center.set_message(titStr,messtext);

% Input center of circle with mouse
axes(h1)
[xa0,ya0]  = ginput(1);

stri1 = [ 'Circle: ' num2str(xa0,5) '; ' num2str(ya0,4)];
stri = stri1;
pause(0.1)

%  Calculate distance for each earthquake from center point
%  and sort by distance l
% Calculate distance from center point and sort with distance
sFigName = get(gcf,'Name')

%if (sFigName == 'Omoricros-section' | sFigName == 'RC-Cross-section')
if bMap == 0    % Cross section
    ZG.(wCat) = newa;
    l = sqrt(((xsecx' - xa0)).^2 + (((xsecy+ya0))).^2) ;
else % Map view
    ZG.(wCat) = a;
    l = ZG.(wCat).epicentralDistanceTo(ya0,xa0);
end

ZG.(wCat)=ZG.(wCat).subset(l); % reorder & copy

% Select data in radius ra
l3 = l <= ra;
ZG.(wCat) = ZG.(wCat)(l3,:); %TOFIX

% Select radius in time
newt3=ZG.(wCat);
vSel = (ZG.(wCat).Date <= ZG.maepi.Date + days(time));
ZG.(wCat) = ZG.(wCat).subset(vSel);
R2 = l(ni);
messtext = sprintf('Number of selected events: %d', ZG.(wCat).Count);
disp(messtext)
zmap_message_center.set_message('Message',messtext)


% Sort the catalog
ZG.(wCat).sort('Date')
R2 = ra;

% Plot selected earthquakes
hold on;

plos1 = plot(ZG.(wCat).Longitude,ZG.(wCat).Latitude,'xk');

% plot circle containing events as circle
x = -pi-0.1:0.1:pi;
pl = plot(xa0+sin(x)*R2/(cosd(ya0)*111), ya0+cos(x)*R2/(cosd(ya0)*111),'k')

% Compute and Plot the forecast
%calc_bootfitF(newt3,time,timef,bootloops,ZG.maepi)
plot_bootfitloglike_a2(newt3,time,timef,bootloops,ZG.maepi);

set(gcf,'Pointer','arrow')
%
ZG.(wCat) = ZG.(wCat);                   % resets ZG.newcat and ZG.newt2

% Call program "timeplot to plot cumulative number
clear l s is
timeplot(ZG.(wCat))

end
