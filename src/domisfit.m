function domisfit() % autogenerated function wrapper
    %  domisfit calculates the misfit for each EQ to a given stress tensor orientation.
    % The actual calculation is done using a call to a fortran program.
    %
    % Stefan Wiemer 07/95
    % turned into function by Celso G Reyes 2017
    
    ZG=ZmapGlobal.Data; % used by get_zmap_globals
    
    
    global mi mif1 mif2  hndl3 a newcat2 mi2
    global tmp cumu2
    report_this_filefun(mfilename('fullpath'));
    
    
    hodis = fullfile(hodi, 'external');
    cd(hodis);
    
    % prepare the focal; mechnism in Gephard format ...
    tmp = [a(:,10:12) ];
    l = tmp(:,2) >89.999;
    tmp(l,2) = tmp(l,2)*0+89.;
    
    try
        save data.inp tmp -ascii
    catch ME
        error_handler(ME, ['Error - could not save file ' ZmapGlobal.Data.out_dir 'data.inp - permission?']);
    end
    
    infi =  ['data.inp'];
    outfi = ['tmpin.dat'];
    fid = fopen('inmifi.dat','w');
    fprintf(fid,'%s\n',infi);
    fprintf(fid,'%s\n',outfi);
    fclose(fid);
    comm = ['delete ' outfi];
    eval(comm)
    
    comm = ['!datasetupDD < inmifi.dat ' ]
    eval(comm)
    
    fid = (['tmpin.dat']);
    format = ['%f%f%f%f%f'];
    [d1 d2 d3 d4,  d5] = textread(fid,format,'headerlines',1);
    
    dall = [d1 d2 d3 d4 d5];
    save tmpin.dat dall -ascii
    
    
    
    infi = ['tmpin.dat'];
    outfi = ['tmpout.dat'];
    
    fid = fopen(['inmifi.dat'],'w');
    
    fprintf(fid,'%s\n',infi);
    fprintf(fid,'%s\n',outfi);
    fprintf(fid,'%2.0f\n',sig);
    fprintf(fid,'%6.2f\n',plu);
    fprintf(fid,'%6.2f\n',az);
    fprintf(fid,'%6.2f\n',phi);
    fprintf(fid,'%3.2f\n',R);
    le = ZG.primeCatalog.Count;
    fprintf(fid,'%6i\n',le);
    
    fclose(fid);
    comm = ['delete ' outfi];
    eval(comm)
    
    comm = ['! testfm < inmifi.dat ' ]
    eval(comm)
    
    comm = ['load tmpout.dat'];
    eval(comm)
    mi = tmpout;
    
    mif1=findobj('Type','Figure','-and','Name','Misfit Map');
    
    
    
    
    
    if isempty(mif1)
        mif1 = figure_w_normalized_uicontrolunits( ...
            'Name','Misfit Map',...
            'NumberTitle','off', ...
            'backingstore','on',...
            'NextPlot','add', ...
            'Visible','off', ...
            'Position',position_in_current_monitor(ZG.map_len(1), ZG.map_len(2)));
        
        create_my_menu_1();
        
        
        labelList=['Size | Size + Thickness | Size +Thickness +color  '];
        labelPos = [0.2 0.93 0.35 0.05];
        hndl2=uicontrol(...
            'Style','popup',...
            'Units','normalized',...
            'Position',labelPos,...
            'String',labelList,...
            'BackgroundColor',[0.7 0.7 0.7]',...
            'callback',@callbackfun_005);
        
        labelList=['1 | 1/2 | 1/3 | 1/4 | 1/5 | 1/6| 1/7| 1/8 | 1/9 | 1/10'];
        labelPos = [0.9 0.93 0.10 0.05];
        hndl3=uicontrol(...
            'Style','popup',...
            'Units','normalized',...
            'Position',labelPos,...
            'Value',4,...
            'String',labelList,...
            'BackgroundColor',[0.7 0.7 0.7]',...
            'callback',@callbackfun_006);
        
        uicontrol(...
            'Style','pushbutton',...
            'Units','normalized',...
            'Position',[0.9 0.6 0.08 0.08],...
            'String','X-sec',...
            'callback',@callbackfun_007);
        hold on
        %end killed
        uicontrol(...
            'Style','pushbutton',...
            'Units','normalized',...
            'Position',[0.9 0.7 0.08 0.08],...
            'String','Map',...
            'callback',@callbackfun_008);
        hold on
    end
    
    figure(mif1)
    
    plotmima(4)
    
    mif2=findobj('Type','Figure','-and','Name','Misfit ');
    
    
    
    if isempty(mif2)
        mif2 = figure_w_normalized_uicontrolunits( ...
            'Name','Misfit ',...
            'NumberTitle','off', ...
            'backingstore','on',...
            'NextPlot','add', ...
            'Visible','off', ...
            'Position',position_in_current_monitor(ZG.map_len(1), ZG.map_len(2)));
        
        create_my_menu_2();
        labelList=['Longitude | Latitude | Time | Magnitude | Depth | Strike | Default'];
        labelPos = [0.7 0.9 0.25 0.08];
        hndl1=uicontrol(...
            'Style','popup',...
            'Units','normalized',...
            'Position',labelPos,...
            'String',labelList,...
            'BackgroundColor',[0.7 0.7 0.7]',...
            'callback',@callbackfun_012);
        hold on
    end
    
    figure(mif2)
    delete(findobj(mif2,'Type','axes'));
    
    plotmi(1)
    
    
    %% ui functions
    function create_my_menu1() %TODO rename to something more intelligent
        add_menu_divider();    %
        omp2= uimenu('Label','Tools');
        uimenu(omp2,'label','Misfit-Magnitude',...
            'callback',@callbackfun_001);
        uimenu(omp2,'label','Misfit-Depth',...
            'callback',@callbackfun_002);
        uimenu(omp2,'label','Earthquake-Depth',...
            'callback',@callbackfun_003);
        uimenu(omp2,'label','Earthquake-Strike',...
            'callback',@callbackfun_004);
        %
    end
    
    function create_my_menu2() %TODO rename to something more intelligent
        add_menu_divider();
        omp1= uimenu('Label','Tools');
        uimenu(omp1,'label','Save sorted catalog',...
            'callback',@callbackfun_009);
        uimenu(omp1,'label','AS Function',...
            'callback',@callbackfun_010);
        uimenu(omp1,'label','Compare',...
            'callback',@callbackfun_011);
    end
    
    %% callback functions
    function callbackfun_001(mysrc,myevt)

        callback_tracker(mysrc,myevt,mfilename('fullpath'));
        mi_ma;
    end
    
    function callbackfun_002(mysrc,myevt)

        callback_tracker(mysrc,myevt,mfilename('fullpath'));
        mi_dep;
    end
    
    function callbackfun_003(mysrc,myevt)

        callback_tracker(mysrc,myevt,mfilename('fullpath'));
        eq_dep;
    end
    
    function callbackfun_004(mysrc,myevt)

        callback_tracker(mysrc,myevt,mfilename('fullpath'));
        eq_str;
    end
    
    function callbackfun_005(mysrc,myevt)

        callback_tracker(mysrc,myevt,mfilename('fullpath'));
        in2=hndl2.Value;
        plotmima(in2);
    end
    
    function callbackfun_006(mysrc,myevt)

        callback_tracker(mysrc,myevt,mfilename('fullpath'));
        in3=hndl3.Value;
        in2=hndl2.Value;
        plotmima(in2) ;
    end
    
    function callbackfun_007(mysrc,myevt)

        callback_tracker(mysrc,myevt,mfilename('fullpath'));
        var1 = 3;
        plotmimac;
    end
    
    function callbackfun_008(mysrc,myevt)

        callback_tracker(mysrc,myevt,mfilename('fullpath'));
        var1 = 1;
        mifigrid;
    end
    
    function callbackfun_009(mysrc,myevt)

        callback_tracker(mysrc,myevt,mfilename('fullpath'));
        save_sortpere;
    end
    
    function callbackfun_010(mysrc,myevt)

        callback_tracker(mysrc,myevt,mfilename('fullpath'));
        ast_misfit;
    end
    
    function callbackfun_011(mysrc,myevt)

        callback_tracker(mysrc,myevt,mfilename('fullpath'));
        compare_misfit;
    end
    
    function callbackfun_012(mysrc,myevt)

        callback_tracker(mysrc,myevt,mfilename('fullpath'));
        in2=hndl1.Value;
        plotmi(in2);
    end
    
end
