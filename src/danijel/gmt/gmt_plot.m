function gmt_map(sOutput, sPrefix, hAxes)
% function gmt_map(sOutput sPrefix, hAxes)
% ----------------------------------------
% Wrapper function for conversion of Matlab map-figures to GMT
%
% Input parameters:
%   sOutput         Filename without path information of the GMT script
%   sPrefix         Prefix of names of files generated by gmt_map (can contain path information)
%                   Default: empty string
%   hAxes           Handle of the axes for conversion (default: gca)
%
% Danijel Schorlemmer
% March 11, 2004

if ~exist('sPrefix', 'var')
  sPrefix = '';
end

if ~exist('hAxes', 'var')
  hAxes = gca;
end

[vXLim, vYLim] = gmt_plot_init(hAxes, sOutput);

vXDiff = [];
vYDiff = [];

% Iterate thru the layers of the plot
vKids = get(hAxes, 'Children');
for nCnt = length(vKids):-1:1
  sType = lower(get(vKids(nCnt), 'Type'));
  switch sType
  case 'surface'
    [fXDiff, fYDiff] = gmt_pcolor(vKids(nCnt), sOutput, num2str(nCnt));
    vXDiff = [vXDiff; fXDiff];
    vYDiff = [vYDiff; fYDiff];

    %(size(mXYDiff,1)+1,:)] = gmt_pcolor(vKids(nCnt), sOutput, num2str(nCnt));
    %[mXYDiff(size(mXYDiff,1)+1,:)]=[5 6]
  case 'line'
    gmt_xy(vKids(nCnt), sOutput, num2str(nCnt));
  case 'text'
    gmt_text(vKids(nCnt), sOutput, num2str(nCnt));
  case 'patch'
    gmt_patch(vKids(nCnt), sOutput, num2str(nCnt));
  end
end



% Search for a colorbar and plot it
gmt_scale(hAxes, sOutput, '')

gmt_done(sOutput);

for nCnt=1:length(vYDiff)-1
    vXDiff(1) = lcm(vXDiff(1),vXDiff(2));vXDiff(2) = [];
    vYDiff(1) = lcm(vYDiff(1),vYDiff(2));vYDiff(2) = [];
end

fXRange = vXLim(2) - vXLim(1);
fXMax = vXLim(1) + round2(fXRange + (vXDiff/2), vXDiff);
fYRange = vYLim(2) - vYLim(1);
fYMax = vYLim(1) + round2(fYRange + (vYDiff/2), vYDiff);

sRLine = sprintf('set area = "-R%s\\/%s\\/%s\\/%s"', num2str(vXLim(1)), num2str(vXLim(2)), num2str(vYLim(1)), num2str(vYLim(2)));
sNewRLine = sprintf('set area = "-R%s\\/%s\\/%s\\/%s"', num2str(vXLim(1)), num2str(fXMax), num2str(vYLim(1)), num2str(fYMax));

hFile = fopen('rline.sed', 'w');
fprintf(hFile, 's/%s/%s/\n', sRLine, sNewRLine);
fclose(hFile);


unix(['sed -f rline.sed ' sOutput ' > ' sOutput '.tmp']);
unix(['mv ' sOutput '.tmp ' sOutput]);
unix(['rm -f rline.sed']);


unix(['chmod u+x ' sOutput]);



